-- ÔøΩ SCRIPT DESTRUCTION TOTALE + RECONSTRUCTION FINITIO
-- ‚ö†Ô∏è  ATTENTION: CE SCRIPT SUPPRIME TOUT ET RECR√âE TOUT √Ä Z√âRO
-- Ex√©cuter ce script dans Supabase pour un reset complet

-- ============================================================================
-- üí• √âTAPE 1: DESTRUCTION TOTALE - SUPPRESSION DE TOUTES LES TABLES
-- ============================================================================

-- D√©sactiver les contraintes de cl√©s √©trang√®res temporairement
SET session_replication_role = replica;

-- Supprimer toutes les tables dans l'ordre inverse des d√©pendances
DROP TABLE IF EXISTS analytics_conversions CASCADE;
DROP TABLE IF EXISTS analytics_logins CASCADE;
DROP TABLE IF EXISTS analytics_signups CASCADE;
DROP TABLE IF EXISTS analytics_events CASCADE;
DROP TABLE IF EXISTS analytics_page_views CASCADE;
DROP TABLE IF EXISTS analytics_sessions CASCADE;
DROP TABLE IF EXISTS notifications CASCADE;
DROP TABLE IF EXISTS paiements CASCADE;
DROP TABLE IF EXISTS devis CASCADE;
DROP TABLE IF EXISTS taches CASCADE;
DROP TABLE IF EXISTS etapes CASCADE;
DROP TABLE IF EXISTS projets CASCADE;
DROP TABLE IF EXISTS prestataires CASCADE;
DROP TABLE IF EXISTS produits CASCADE;
DROP TABLE IF EXISTS fournisseurs CASCADE;
DROP TABLE IF EXISTS users CASCADE;

-- R√©activer les contraintes
SET session_replication_role = DEFAULT;

-- ============================================================================
-- üèóÔ∏è √âTAPE 2: RECONSTRUCTION COMPL√àTE - CR√âATION DE TOUTES LES TABLES
-- ============================================================================

-- 1. Table des utilisateurs
CREATE TABLE users (
  id uuid primary key default gen_random_uuid(),
  nom text,
  email text unique not null,
  mot_de_passe text,
  role text default 'client',
  created_at timestamp default now()
);

-- 2. Table des fournisseurs
CREATE TABLE fournisseurs (
  id uuid primary key default gen_random_uuid(),
  nom text,
  email text,
  telephone text,
  adresse text,
  site_web text
);

-- 3. Table des produits
CREATE TABLE produits (
  id uuid primary key default gen_random_uuid(),
  fournisseur_id uuid references fournisseurs(id) on delete cascade,
  nom text,
  description text,
  prix numeric,
  unite text,
  image_url text
);

-- 4. Table des projets
CREATE TABLE projets (
  id uuid primary key default gen_random_uuid(),
  user_id uuid references users(id) on delete cascade,
  titre text not null,
  description text,
  statut text default 'en cours',
  budget numeric,
  localisation text,
  created_at timestamp default now()
);

-- 5. Table des √©tapes
CREATE TABLE etapes (
  id uuid primary key default gen_random_uuid(),
  projet_id uuid references projets(id) on delete cascade,
  titre text,
  description text,
  ordre int,
  date_debut date,
  date_fin date,
  statut text default '√† faire'
);

-- 6. Table des prestataires
CREATE TABLE prestataires (
  id uuid primary key default gen_random_uuid(),
  nom text,
  email text,
  telephone text,
  specialite text,
  zone text,
  verified boolean default false,
  created_at timestamp default now()
);

-- 7. Table des t√¢ches
CREATE TABLE taches (
  id uuid primary key default gen_random_uuid(),
  etape_id uuid references etapes(id) on delete cascade,
  titre text,
  description text,
  assignee uuid references users(id),
  statut text default 'non commenc√©e',
  date_echeance date
);

-- 8. Table des devis
CREATE TABLE devis (
  id uuid primary key default gen_random_uuid(),
  projet_id uuid references projets(id) on delete cascade,
  montant numeric,
  description text,
  fichier_url text,
  statut text default 'en attente',
  fournisseur_id uuid references fournisseurs(id),
  created_at timestamp default now()
);

-- 9. Table des paiements
CREATE TABLE paiements (
  id uuid primary key default gen_random_uuid(),
  projet_id uuid references projets(id) on delete cascade,
  montant numeric,
  date_paiement date,
  mode text,
  statut text default 'en attente'
);

-- 10. Table des notifications
CREATE TABLE notifications (
  id uuid primary key default gen_random_uuid(),
  user_id uuid references users(id) on delete cascade,
  message text,
  lu boolean default false,
  created_at timestamp default now()
);

-- ============================================================================
-- üîê √âTAPE 3: ACTIVATION ROW LEVEL SECURITY (RLS)
-- ============================================================================

-- Activer RLS sur toutes les tables
ALTER TABLE users ENABLE ROW LEVEL SECURITY;
ALTER TABLE projets ENABLE ROW LEVEL SECURITY;
ALTER TABLE etapes ENABLE ROW LEVEL SECURITY;
ALTER TABLE devis ENABLE ROW LEVEL SECURITY;
ALTER TABLE paiements ENABLE ROW LEVEL SECURITY;
ALTER TABLE notifications ENABLE ROW LEVEL SECURITY;
ALTER TABLE taches ENABLE ROW LEVEL SECURITY;
ALTER TABLE prestataires ENABLE ROW LEVEL SECURITY;
ALTER TABLE fournisseurs ENABLE ROW LEVEL SECURITY;
ALTER TABLE produits ENABLE ROW LEVEL SECURITY;

-- Politiques RLS basiques (les utilisateurs voient leurs propres donn√©es)
CREATE POLICY "Users can view own data" ON users FOR ALL USING (auth.uid() = id);
CREATE POLICY "Users can insert own data" ON users FOR INSERT WITH CHECK (auth.uid() = id);
CREATE POLICY "Users can view own projects" ON projets FOR ALL USING (auth.uid() = user_id);
CREATE POLICY "Users can view project steps" ON etapes FOR ALL USING (
  EXISTS (SELECT 1 FROM projets WHERE projets.id = etapes.projet_id AND projets.user_id = auth.uid())
);
CREATE POLICY "Users can view project quotes" ON devis FOR ALL USING (
  EXISTS (SELECT 1 FROM projets WHERE projets.id = devis.projet_id AND projets.user_id = auth.uid())
);
CREATE POLICY "Users can view own notifications" ON notifications FOR ALL USING (auth.uid() = user_id);

-- ============================================================================
-- üë• √âTAPE 4: CR√âATION UTILISATEURS DE TEST
-- ============================================================================

INSERT INTO users (nom, email, role) VALUES
-- CLIENTS
('Ahmed Benali', 'client1@test.com', 'client'),
('Fatima Zahra', 'client2@test.com', 'client'),
('Omar Tazi', 'client3@test.com', 'client'),
('Aicha Bennani', 'client4@test.com', 'client'),

-- ARCHITECTES
('Karim Hassan', 'architecte1@test.com', 'architecte'),
('Sara Alami', 'architecte2@test.com', 'architecte'),

-- PRESTATAIRES
('Mohamed Raji', 'prestataire1@test.com', 'prestataire'),
('Laila Fassi', 'prestataire2@test.com', 'prestataire'),
('Rachid Berrada', 'prestataire3@test.com', 'prestataire');

-- ============================================================================
-- üèóÔ∏è √âTAPE 5: CR√âATION PROJETS DE TEST
-- ============================================================================

INSERT INTO projets (titre, description, localisation, budget, statut) VALUES
('Villa Moderne Rabat', 'Construction villa contemporaine 250m¬≤ avec piscine', 'Rabat, Maroc', 850000.00, 'en cours'),
('R√©novation Appartement Casa', 'R√©novation compl√®te appartement 120m¬≤', 'Casablanca, Maroc', 180000.00, 'en cours'),
('Extension Maison Marrakech', 'Extension 80m¬≤ avec terrasse couverte', 'Marrakech, Maroc', 320000.00, 'planifie'),
('Loft Industriel Tanger', 'Transformation entrep√¥t en loft 180m¬≤', 'Tanger, Maroc', 450000.00, 'en cours'),
('Maison √âcologique F√®s', 'Construction maison bioclimatique', 'F√®s, Maroc', 680000.00, 'planifie');

-- ============================================================================
-- üìã √âTAPE 6: CR√âATION √âTAPES KANBAN
-- ============================================================================

INSERT INTO etapes (titre, description, statut, ordre) VALUES
-- √âtapes termin√©es
('√âtude faisabilit√©', 'Analyse terrain et g√©otechnique', 'termin√©', 1),
('Plans architecturaux', 'Conception et validation', 'termin√©', 2),
('Permis construire', 'D√©p√¥t et obtention', 'termin√©', 3),
('Diagnostic technique', '√âtat des lieux complet', 'termin√©', 4),
('Plans extension', 'Conception d√©taill√©e', 'termin√©', 5),
('√âtude structure', 'Analyse b√¢timent existant', 'termin√©', 6),

-- √âtapes en cours
('Permis travaux', 'Autorisation municipale', 'en cours', 1),
('D√©molition', 'Cloisons non porteuses', 'en cours', 2),
('√âlectricit√©', 'R√©novation syst√®me complet', 'en cours', 3),
('Renforcement structure', 'Poutres m√©talliques', 'en cours', 4),

-- √âtapes √† faire
('Terrassement', 'Pr√©paration terrain', '√† faire', 1),
('Gros ≈ìuvre', 'Construction murs porteurs', '√† faire', 2),
('Second ≈ìuvre', 'Plomberie et √©lectricit√©', '√† faire', 3),
('Plomberie', 'Installation cuisine moderne', '√† faire', 4),
('Sols et peinture', 'Finitions g√©n√©rales', '√† faire', 5),
('Fondations extension', 'Coulage b√©ton', '√† faire', 6),
('Murs et toiture', 'Construction extension', '√† faire', 7),
('Am√©nagement int√©rieur', 'Isolation cloisons', '√† faire', 8),
('Isolation thermique', 'Murs et toiture', '√† faire', 9),
('Cloisons et mezzanine', 'Espaces de vie', '√† faire', 10),
('Finitions design', 'Style industriel', '√† faire', 11),
('√âtude bioclimatique', 'Orientation solaire', '√† faire', 12),
('Fondations √©cologiques', 'Mat√©riaux durables', '√† faire', 13),
('Murs terre crue', 'Construction locale', '√† faire', 14),
('Panneaux solaires', 'Installation photovolta√Øque', '√† faire', 15),
('R√©cup√©ration eau', 'Syst√®me pluie', '√† faire', 16);

-- ============================================================================
-- üí∞ √âTAPE 7: CR√âATION DEVIS DE TEST
-- ============================================================================

INSERT INTO devis (montant, description, statut) VALUES
(85000.00, 'Devis gros ≈ìuvre villa moderne Rabat', 'en_attente'),
(25000.00, 'Devis r√©novation √©lectricit√© appartement', 'accepte'),
(45000.00, 'Devis extension maison Marrakech', 'en_cours'),
(35000.00, 'Devis renforcement structure loft', 'accepte'),
(75000.00, 'Devis construction √©cologique F√®s', 'en_attente'),
(15000.00, 'Devis plomberie compl√®te', 'en_cours'),
(28000.00, 'Devis isolation thermique', 'en_attente'),
(42000.00, 'Devis finitions design', 'accepte'),
(18000.00, 'Devis panneaux solaires', 'en_cours'),
(12000.00, 'Devis r√©cup√©ration eau', 'en_attente');

-- ============================================================================
-- ‚úÖ √âTAPE 8: V√âRIFICATION FINALE
-- ============================================================================

-- V√©rifier que toutes les tables sont cr√©√©es
SELECT 'TABLES CR√â√âES' as info, table_name 
FROM information_schema.tables 
WHERE table_schema = 'public' 
ORDER BY table_name;

-- Compter les donn√©es
SELECT 'UTILISATEURS' as type, COUNT(*) as total FROM users;
SELECT 'PROJETS' as type, COUNT(*) as total FROM projets;
SELECT '√âTAPES' as type, COUNT(*) as total FROM etapes;
SELECT 'DEVIS' as type, COUNT(*) as total FROM devis;

-- Statistiques par statut
SELECT '√âTAPES PAR STATUT' as info, statut, COUNT(*) as nombre FROM etapes GROUP BY statut;
SELECT 'DEVIS PAR STATUT' as info, statut, COUNT(*) as nombre FROM devis GROUP BY statut;

-- ============================================================================
-- üéâ SUCC√àS - BASE DE DONN√âES COMPL√àTEMENT RECONSTRUITE !
-- ============================================================================

SELECT 'üéâ FINITIO DATABASE COMPL√àTEMENT RECONSTRUITE !' as message,
       'Tables: 10 | Utilisateurs: 9 | Projets: 5 | √âtapes: 26 | Devis: 10' as resume,
       'RLS activ√© sur toutes les tables avec politiques s√©curis√©es' as securite;