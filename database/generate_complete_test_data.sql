-- üéØ G√âN√âRATION COMPL√àTE DE DONN√âES DE TEST FINITIO
-- Cr√©e des projets et √©tapes Kanban pour TOUS les r√¥les (prestataires, architectes, clients)

-- ============================================================================
-- üóëÔ∏è √âTAPE 1: NETTOYER LES DONN√âES EXISTANTES
-- ============================================================================

-- Supprimer toutes les √©tapes existantes
DELETE FROM etapes;

-- Supprimer tous les projets existants
DELETE FROM projets;

-- ============================================================================
-- üìã √âTAPE 2: CR√âER DES PROJETS POUR CHAQUE R√îLE
-- ============================================================================

-- Projets pour CLIENTS
INSERT INTO projets (id, titre, description, statut, budget, user_id, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  'R√©novation ' || u.nom,
  'Projet de r√©novation compl√®te pour ' || u.nom,
  'en_cours',
  50000 + (random() * 100000)::int,
  u.id,
  now() - (random() * interval '30 days'),
  now()
FROM users u 
WHERE u.role = 'client';

INSERT INTO projets (id, titre, description, statut, budget, user_id, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  'Extension ' || u.nom,
  'Projet d''extension de maison pour ' || u.nom,
  'planifie',
  75000 + (random() * 50000)::int,
  u.id,
  now() - (random() * interval '20 days'),
  now()
FROM users u 
WHERE u.role = 'client';

-- Projets pour ARCHITECTES
INSERT INTO projets (id, titre, description, statut, budget, user_id, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  'Conception Villa ' || u.nom,
  'Conception architecturale d''une villa moderne par ' || u.nom,
  'en_cours',
  120000 + (random() * 80000)::int,
  u.id,
  now() - (random() * interval '25 days'),
  now()
FROM users u 
WHERE u.role = 'architecte';

INSERT INTO projets (id, titre, description, statut, budget, user_id, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  'Immeuble Commercial ' || u.nom,
  'Conception d''un immeuble commercial par ' || u.nom,
  'planifie',
  200000 + (random() * 100000)::int,
  u.id,
  now() - (random() * interval '15 days'),
  now()
FROM users u 
WHERE u.role = 'architecte';

-- Projets pour PRESTATAIRES
INSERT INTO projets (id, titre, description, statut, budget, user_id, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  'Chantier ' || u.nom,
  'Travaux de construction g√©r√©s par ' || u.nom,
  'en_cours',
  80000 + (random() * 60000)::int,
  u.id,
  now() - (random() * interval '35 days'),
  now()
FROM users u 
WHERE u.role = 'prestataire';

INSERT INTO projets (id, titre, description, statut, budget, user_id, created_at, updated_at)
SELECT 
  gen_random_uuid(),
  'R√©habilitation ' || u.nom,
  'R√©habilitation de b√¢timent par ' || u.nom,
  'termine',
  45000 + (random() * 40000)::int,
  u.id,
  now() - (random() * interval '45 days'),
  now()
FROM users u 
WHERE u.role = 'prestataire';

-- ============================================================================
-- üìã √âTAPE 3: CR√âER LES √âTAPES KANBAN POUR TOUS LES PROJETS
-- ============================================================================

-- Cr√©er 5 √©tapes pour chaque projet existant
INSERT INTO etapes (id, projet_id, titre, description, statut, ordre)
SELECT 
  gen_random_uuid(),
  p.id,
  etape_template.titre,
  etape_template.description,
  CASE 
    WHEN etape_template.ordre <= 2 THEN 'termine'
    WHEN etape_template.ordre = 3 THEN 'en_cours'
    ELSE 'a_faire'
  END as statut,
  etape_template.ordre
FROM projets p
CROSS JOIN (
  VALUES 
    ('üìã Analyse des besoins', '√âtude d√©taill√©e des besoins du client', 1),
    ('üé® Conception & Design', 'Cr√©ation des plans et maquettes', 2),
    ('üèóÔ∏è R√©alisation', 'Phase de construction/d√©veloppement', 3),
    ('üîç Contr√¥le Qualit√©', 'Tests et v√©rifications qualit√©', 4),
    ('üöÄ Livraison Finale', 'Finalisation et remise du projet', 5)
) AS etape_template(titre, description, ordre);

-- ============================================================================
-- üé≤ √âTAPE 4: RANDOMISATION R√âALISTE DES STATUTS
-- ============================================================================

-- Randomiser quelques statuts pour plus de r√©alisme
UPDATE etapes 
SET statut = 'termine'
WHERE titre = 'üìã Analyse des besoins' 
AND random() < 0.9; -- 90% des analyses termin√©es

UPDATE etapes 
SET statut = 'termine'
WHERE titre = 'üé® Conception & Design' 
AND random() < 0.6; -- 60% des conceptions termin√©es

UPDATE etapes 
SET statut = 'en_cours'
WHERE titre = 'üé® Conception & Design' 
AND statut = 'a_faire'
AND random() < 0.7; -- 70% des conceptions restantes en cours

UPDATE etapes 
SET statut = 'en_cours'
WHERE titre = 'üèóÔ∏è R√©alisation' 
AND random() < 0.5; -- 50% des r√©alisations en cours

UPDATE etapes 
SET statut = 'termine'
WHERE titre = 'üèóÔ∏è R√©alisation' 
AND random() < 0.2; -- 20% des r√©alisations termin√©es

-- ============================================================================
-- ‚úÖ √âTAPE 5: V√âRIFICATIONS COMPL√àTES
-- ============================================================================

-- Statistiques des projets par r√¥le
SELECT 
  'üìä PROJETS PAR R√îLE' as info,
  u.role,
  COUNT(p.id) as nombre_projets,
  ROUND(AVG(p.budget)) as budget_moyen
FROM users u
LEFT JOIN projets p ON u.id = p.user_id
GROUP BY u.role
ORDER BY u.role;

-- Statistiques des √©tapes par statut
SELECT 
  'üìã √âTAPES PAR STATUT' as info,
  e.statut,
  COUNT(*) as nombre
FROM etapes e
GROUP BY e.statut
ORDER BY 
  CASE e.statut 
    WHEN 'termine' THEN 1
    WHEN 'en_cours' THEN 2
    WHEN 'a_faire' THEN 3
  END;

-- Aper√ßu des projets par utilisateur
SELECT 
  'üë§ PROJETS PAR UTILISATEUR' as vue,
  u.nom,
  u.role,
  u.email,
  COUNT(p.id) as nb_projets,
  COUNT(e.id) as nb_etapes
FROM users u
LEFT JOIN projets p ON u.id = p.user_id
LEFT JOIN etapes e ON p.id = e.projet_id
GROUP BY u.id, u.nom, u.role, u.email
ORDER BY u.role, u.nom;

-- Aper√ßu d√©taill√© du Kanban
SELECT 
  'üéØ APER√áU KANBAN COMPLET' as vue,
  u.nom as proprietaire,
  u.role,
  p.titre as projet,
  e.titre as etape,
  e.statut,
  e.ordre
FROM users u
JOIN projets p ON u.id = p.user_id
JOIN etapes e ON p.id = e.projet_id
ORDER BY u.role, u.nom, p.titre, e.ordre
LIMIT 30;

SELECT 'üéâ G√âN√âRATION COMPL√àTE TERMIN√âE !' as message,
       'Tous les r√¥les ont maintenant des projets et √©tapes Kanban' as details;
