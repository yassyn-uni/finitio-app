-- üîç V√âRIFICATION STRUCTURE BASE DE DONN√âES SUPABASE
-- Ce script v√©rifie l'existence des tables n√©cessaires

-- ============================================================================
-- üìã √âTAPE 1: V√âRIFIER LES TABLES EXISTANTES
-- ============================================================================

-- Lister toutes les tables dans le sch√©ma public
SELECT 
  table_name,
  table_type
FROM information_schema.tables 
WHERE table_schema = 'public'
ORDER BY table_name;

-- ============================================================================
-- üë§ √âTAPE 2: V√âRIFIER LA TABLE USERS
-- ============================================================================

-- V√©rifier si la table users existe et sa structure
SELECT 
  column_name,
  data_type,
  is_nullable,
  column_default
FROM information_schema.columns 
WHERE table_schema = 'public' 
  AND table_name = 'users'
ORDER BY ordinal_position;

-- ============================================================================
-- üîë √âTAPE 3: V√âRIFIER LES UTILISATEURS AUTH
-- ============================================================================

-- V√©rifier les utilisateurs dans auth.users (syst√®me Supabase)
SELECT 
  id,
  email,
  created_at
FROM auth.users
LIMIT 5;

-- ============================================================================
-- üìä √âTAPE 4: V√âRIFIER LES UTILISATEURS PUBLICS
-- ============================================================================

-- V√©rifier les utilisateurs dans la table publique users (si elle existe)
DO $$
BEGIN
  IF EXISTS (SELECT FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users') THEN
    RAISE NOTICE 'Table users existe - Affichage des donn√©es:';
    PERFORM * FROM users LIMIT 5;
  ELSE
    RAISE NOTICE 'Table users n''existe pas dans le sch√©ma public';
  END IF;
END $$;
